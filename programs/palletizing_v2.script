def unnamed():
  global _hidden_verificationVariable=0
  set_target_payload(0.000000, [0.000000, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000])
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
  set_tool_output_mode(0)
  set_tool_digital_output_mode(0, 1)
  set_tool_digital_output_mode(1, 1)
  set_tool_voltage(0)
  set_tcp(p[0.0,0.0,0.0,0.0,0.0,0.0])
  set_safety_mode_transition_hardness(1)
  set_gravity([0.0, 0.0, 9.82])
  global referencePoint=p[-0.10000000000528572,-0.5000000000023159,2.402361642950268E-11,9.577815474290461E-4,3.1415924926885586,-6.875343546382303E-15]
  global separatorPoint=p[0.0,0.0,0.0,0.0,0.0,0.0]
  step_count_913ff4e1_0f2c_414c_95ef_849d6e453d34 = 0.0
  thread Step_Counter_Thread_a472bc6e_afc9_48ff_b4b8_2478d52d1435():
    while (True):
      step_count_913ff4e1_0f2c_414c_95ef_849d6e453d34 = step_count_913ff4e1_0f2c_414c_95ef_849d6e453d34 + 1.0
      sync()
    end
  end
  run Step_Counter_Thread_a472bc6e_afc9_48ff_b4b8_2478d52d1435()
  global Pallet_1_cnt=1
  global Pallet_1_lct=1
  global Pallet_1_lno=1
  global Pallet_1_sep= False 
  global Pallet_1_tct=1
  global qNearApproach=[0,0,0,0,0,0]
  global Approach_p=p[-.100000000010, -.499999999935, .099999999717, .000957781552, 3.141592507590, -.000000000000]
  global Approach_q=[-1.503695911808551, -2.051480725038944, -2.137734284661156, -0.5231739690600845, 1.570796347615361, 0.06771015787448942]
  global ToolActionPoint_p=p[-.100000000005, -.500000000002, .000000000024, .000957781547, 3.141592492689, -.000000000000]
  global ToolActionPoint_q=[-1.5036959075952971, -2.308437484045733, -2.1285862917561147, -0.27536520437773326, 1.570796326589793, 0.06771016208774215]
  global Exit_1_p=p[-.100000000005, -.500000000002, .100000000219, .000957781552, 3.141592507590, -.000000000000]
  global Exit_1_q=[-1.5036959105623122, -2.051480723645809, -2.1377342846775944, -0.5231739708525147, 1.5707963414571147, 0.06771015912073135]
  while (True):
    $ 2 "Robot Program"
    $ 3 "Pallet_1"
    def Pallet_1_trans(pose):
    return p[pose[0], pose[1], pose[2], 0, 0, 0]
  end
  def Pallet_1_rot(pose):
  return p[0, 0, 0, pose[3], pose[4], pose[5]]
  end
  def Pallet_1_compute_pallet_waypoint(T_base_feature_taught, T_feature_referencePoint_taught, T_referencePoint_approach_taught, T_base_feature, T_base_referencePoint):
  local trans_referencePoint_approach_in_feature_taught = pose_sub(Pallet_1_trans(pose_trans(T_feature_referencePoint_taught, T_referencePoint_approach_taught)), Pallet_1_trans(T_feature_referencePoint_taught))
  local rot_referencePoint_approach_in_feature_taught = pose_trans(Pallet_1_rot(T_feature_referencePoint_taught), pose_trans(Pallet_1_rot(T_referencePoint_approach_taught), pose_inv(Pallet_1_rot(T_feature_referencePoint_taught))))
  T_feature_referencePoint = pose_trans(pose_inv(T_base_feature), T_base_referencePoint)
  rot_referencePoint_approach = pose_trans(pose_inv(Pallet_1_rot(T_feature_referencePoint)), pose_trans(rot_referencePoint_approach_in_feature_taught, Pallet_1_rot(T_feature_referencePoint)))
  T_feature_approach = pose_trans(trans_referencePoint_approach_in_feature_taught, pose_trans(T_feature_referencePoint, rot_referencePoint_approach))
  T_base_approach = pose_trans(T_base_feature, T_feature_approach)
  return T_base_approach
  end
  Pallet_1_tct = 12
  if (Pallet_1_cnt > 12 or Pallet_1_cnt < 1):
    Pallet_1_cnt = 1
  end
  $ 4 "Patterns" "noBreak"
  $ 5 "Grid_Pattern_1" "noBreak"
  $ 10 "Layers" "noBreak"
  if (Pallet_1_cnt < 13):
    Pallet_1_lno = 1
    Pallet_1_lct = Pallet_1_cnt
    global CornerItem_1=pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], pose_trans(p[-.000000000000, -.000000000000, -.000000000000, .000000000000, .000000000000, .000000000000], p[-.100000000005, -.500000000002, .000000000024, .000957781552, 3.141592507590, -.000000000000]))
    global CornerItem_2=pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], pose_trans(p[-.000000000000, -.000000000000, -.000000000000, .000000000000, .000000000000, .000000000000], p[-.100000000019, -.300000000159, .000000000100, .000957781546, 3.141592486516, -.000000000000]))
    global CornerItem_3=pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], pose_trans(p[-.000000000000, -.000000000000, -.000000000000, .000000000000, .000000000000, .000000000000], p[-.199999999687, -.299999999990, .000000000147, .000957781552, 3.141592507590, -.000000000000]))
    global CornerItem_4=pose_trans(p[0.0,0.0,0.0,0.0,0.0,0.0], pose_trans(p[-.000000000000, -.000000000000, -.000000000000, .000000000000, .000000000000, .000000000000], p[-.199999999687, -.500000000110, .000000000147, .000957781543, 3.141592477787, -.000000000000]))
    Pallet_1_cnt_x = (Pallet_1_lct - 1) % 4
    Pallet_1_cnt_y = floor((Pallet_1_lct - 1) / 4)
    referencePoint = interpolate_pose(interpolate_pose(CornerItem_1, CornerItem_2, Pallet_1_cnt_x/3), interpolate_pose(CornerItem_4, CornerItem_3,Pallet_1_cnt_x/3), Pallet_1_cnt_y/2)
    if (Pallet_1_cnt_x < 2.0):
      if (Pallet_1_cnt_y < 1.5):
        qNearApproach = [-1.503695907595298, -2.3084374840457333, -2.1285862917561147, -0.2753652043777315, 1.570796326589793, 0.06771016208774179]
      else:
        qNearApproach = [-1.7011706757019809, -2.332470522672254, -2.0454381327093394, -0.3344803286634317, 1.5707963561403737, -0.12976460601893525]
      end
    else:
      if (Pallet_1_cnt_y < 1.5):
        qNearApproach = [-1.4574132262282653, -2.297942744226603, -2.660299050001476, 0.24585281643913745, 1.570796347527177, 0.1139928434547759]
      else:
        qNearApproach = [-1.7801045384571461, -2.2610622419770614, -2.541470022830122, 0.09014328462761113, 1.5707963265897957, -0.20869846877410225]
      end
    end
    direction = p[0,0,1,0,0,0]
    referencePoint = pose_add (referencePoint,p[0.0*direction[0],0.0*direction[1],0.0*direction[2],0,0,0])
  end
  Approach_p = Pallet_1_compute_pallet_waypoint(p[0.0,0.0,0.0,0.0,0.0,0.0], pose_trans(pose_inv(p[0.0,0.0,0.0,0.0,0.0,0.0]), p[-0.10000000000528572,-0.5000000000023159,2.402361642950268E-11,9.577815519719829E-4,3.141592507589719,-6.875343578993342E-15]), p[4.562891731119123E-12,6.729117263404305E-11,-0.09999999969251218,0.0,0.0,0.0], p[0.0,0.0,0.0,0.0,0.0,0.0], referencePoint)
  Approach_p = pose_trans(p[-0.10000000000528572,-0.5000000000023159,2.402361642950268E-11,9.577815474290461E-4,3.1415924926885586,-6.875343546382303E-15], pose_trans(pose_inv(referencePoint), Approach_p))
  Approach_q = qNearApproach
  ToolActionPoint_p = Pallet_1_compute_pallet_waypoint(p[0.0,0.0,0.0,0.0,0.0,0.0], pose_trans(pose_inv(p[0.0,0.0,0.0,0.0,0.0,0.0]), p[-0.10000000000528572,-0.5000000000023159,2.402361642950268E-11,9.577815519719829E-4,3.141592507589719,-6.875343578993342E-15]), p[0.0,0.0,0.0,-4.5429367976078755E-12,-1.4901160057252823E-8,-5.4177497585487834E-20], p[0.0,0.0,0.0,0.0,0.0,0.0], referencePoint)
  ToolActionPoint_p = pose_trans(p[-0.10000000000528572,-0.5000000000023159,2.402361642950268E-11,9.577815474290461E-4,3.1415924926885586,-6.875343546382303E-15], pose_trans(pose_inv(referencePoint), ToolActionPoint_p))
  Exit_1_p = Pallet_1_compute_pallet_waypoint(p[0.0,0.0,0.0,0.0,0.0,0.0], pose_trans(pose_inv(p[0.0,0.0,0.0,0.0,0.0,0.0]), p[-0.10000000000528572,-0.5000000000023159,2.402361642950268E-11,9.577815519719829E-4,3.141592507589719,-6.875343578993342E-15]), p[1.6653345369377348E-16,-1.2212453270876722E-15,-0.1000000001946059,0.0,0.0,0.0], p[0.0,0.0,0.0,0.0,0.0,0.0], referencePoint)
  Exit_1_p = pose_trans(p[-0.10000000000528572,-0.5000000000023159,2.402361642950268E-11,9.577815474290461E-4,3.1415924926885586,-6.875343546382303E-15], pose_trans(pose_inv(referencePoint), Exit_1_p))
  $ 11 "At Each Item" "noBreak"
  $ 12 "Generated Movements" "noBreak"
  $ 13 "MoveJ" "noBreak"
  $ 14 "Approach" "noBreak"
  movej(get_inverse_kin(pose_trans(referencePoint, pose_trans(p[-.099695110093, .500060881320, .000000000024, .000957781552, 3.141592507590, -.000000000000], Approach_p)), qnear=Approach_q), a=1.3962634015954636, v=1.0471975511965976)
  $ 15 "MoveL" "noBreak"
  $ 16 "ToolActionPoint" "noBreak"
  movel(pose_trans(referencePoint, pose_trans(p[-.099695110093, .500060881320, .000000000024, .000957781552, 3.141592507590, -.000000000000], ToolActionPoint_p)), a=1.2, v=0.25)
  $ 17 "Tool action" "noBreak"
  $ 18 "Wait: 1.0" "noBreak"
  sleep(1.0)
  $ 19 "MoveL" "noBreak"
  $ 20 "Exit_1" "noBreak"
  movel(pose_trans(referencePoint, pose_trans(p[-.099695110093, .500060881320, .000000000024, .000957781552, 3.141592507590, -.000000000000], Exit_1_p)), a=1.2, v=0.25)
  Pallet_1_sep = False
  if (Pallet_1_cnt >= 12):
    Pallet_1_cnt = 1
  else:
    Pallet_1_cnt = Pallet_1_cnt + 1
  end
  end
end
